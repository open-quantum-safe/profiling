version: 2.1

parameters:
  new_openssl_commit:
    type: boolean
    default: false

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

jobs:
  debian_arm64:
    description: Building and pushing ARM64 benchmarking baseline image
    docker:
      - image: openquantumsafe/ci-debian-bullseye-amd64
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Check versions
          command: |
            qemu-aarch64-static --version
      - run:
          name: Enable experimental features on docker server
          command: |
            ssh remote-docker \<<EOF
              sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
              sudo systemctl restart docker
            EOF
      - run:
          name: activate multiarch
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes && 
            docker run -it arm64v8/debian:bullseye-slim uname -a
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Authenticate to Docker
          command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: Build and test profiling image
          command: |
            # The CircleCI executor offers 35 cores, but using
            # all of them might exhaust memory
            # explicitly tag platform
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker version
            docker build --platform arm64 --build-arg MAKE_DEFINES="-j 18" -t intermediate -f Dockerfile-arm64-start . &&
            docker build --platform arm64 --build-arg MAKE_DEFINES="-j 18" -t oqs-mperf-arm64 -f Dockerfile-arm64-end . &&
            docker run -it oqs-mperf-arm64 /opt/test/selftest.sh
          working_directory: perf
      - when:
          condition:
            or:
              - equal: [ main, << pipeline.git.branch >> ]
              - equal: [ true, << pipeline.parameters.new_openssl_commit >> ]
          steps:
            - run:
                name: Push image
                command: |
                  docker tag oqs-mperf-arm64 $TARGETNAME/oqs-perf:latest-arm64 &&
                  docker push $TARGETNAME/oqs-perf:latest-arm64

  debian_x64:
    description: A template for building and pushing OQS performance testing Docker image on Ubuntu Bionic that depend on OQS-OpenSSL
    docker:
      - image: openquantumsafe/ci-ubuntu-focal-x86_64:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - setup_remote_docker
      - run:
          name: Authenticate to Docker
          command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: Build and test profiling image
          command: |
            # The CircleCI executor offers 35 cores, but using
            # all of them might exhaust memory
            docker build --build-arg MAKE_DEFINES="-j 18" -t oqs-mperf . &&
            docker run -it oqs-mperf /opt/test/selftest.sh
          working_directory: perf
      - when:
          condition:
            or:
              - equal: [ main, << pipeline.git.branch >> ]
              - equal: [ true, << pipeline.parameters.new_openssl_commit >> ]
          steps:
            - run:
                name: Push image
                command: |
                  docker tag oqs-mperf $TARGETNAME/oqs-perf:latest-amd64 &&
                  docker push $TARGETNAME/oqs-perf:latest-amd64 
  merge:
    description: merging multiple architecture docker images into one multiarch image
    docker:
      - image: openquantumsafe/ci-ubuntu-focal-x86_64:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - setup_remote_docker
      - run:
          name: Authenticate to Docker
          command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - when:
          condition:
            or:
              - equal: [ main, << pipeline.git.branch >> ]
              - equal: [ true, << pipeline.parameters.new_openssl_commit >> ]
          steps:
            - run:
                name: Merge and push manifests to properly label multiarch image
                command: |
                   export DOCKER_CLI_EXPERIMENTAL=enabled
                   docker manifest create $TARGETNAME/oqs-perf:latest $TARGETNAME/oqs-perf:latest-amd64 $TARGETNAME/oqs-perf:latest-arm64
                   # if --platform is not properly honored in build, set it explicitly here
                   docker manifest annotate $TARGETNAME/oqs-perf:latest $TARGETNAME/oqs-perf:latest-arm64 --arch arm64
                   docker manifest push $TARGETNAME/oqs-perf:latest

workflows:
  version: 2.1
  build:
    jobs:
      - debian_x64:
          context: openquantumsafe
      - debian_arm64:
          context: openquantumsafe
      - merge:
          requires:
             - debian_x64
             - debian_arm64
          context: openquantumsafe
